{"version":3,"sources":["Componentes/About/About.js","Componentes/Card/Card.js","Componentes/Cards/Cards.js","Componentes/Searchbar/Searchbar.js","Componentes/Nav/Nav.js","App.js","index.js"],"names":["About","Card","min","max","name","img","onClose","id","className","onClick","to","src","width","height","alt","Cards","cities","map","c","Searchbar","onSearch","useState","city","setCity","class","onSubmit","e","preventDefault","type","placeholder","aria-label","value","onChange","target","Nav","App","setCities","oldCities","filter","ciudad","fetch","then","r","json","info","undefined","main","Math","round","temp_min","temp_max","weather","icon","wind","speed","temp","clouds","all","latitud","coord","lat","longitud","lon","alert","path","render","component","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6bcf6fb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst About = () => {\r\n return (\r\n     <h1>Carlangas</h1>\r\n )\r\n}\r\n\r\n\r\nexport default About","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Card.css'\r\n\r\n\r\nconst Card = ({ min, max, name, img, onClose, id }) => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div id=\"closeIcon\" className=\"row\">\r\n          <button onClick={onClose} className=\"btn btn-sm btn-danger\">\r\n            X\r\n          </button>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Link to={`/ciudad/${id}`}>\r\n            <h5 className=\"card-title\">{name}</h5>\r\n          </Link>\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n              <p>Min</p>\r\n              <p>{min}°</p>\r\n            </div>\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n              <p>Max</p>\r\n              <p>{max}°</p>\r\n            </div>\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n              <img\r\n                className=\"iconoClima\"\r\n                src={\"http://openweathermap.org/img/wn/\" + img + \"@2x.png\"}\r\n                width=\"80\"\r\n                height=\"80\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default Card","import React from 'react'\r\nimport Card from '../Card/Card';\r\nimport  \"./Cards.css\";\r\n\r\nconst Cards = ({cities, onClose}) => {\r\n    return (\r\n        <div className=\"cards\">\r\n            {cities.map(c => <Card\r\n          key={c.id}\r\n          max={c.max}\r\n          min={c.min}\r\n          name={c.name}\r\n          img={c.img}\r\n          id={c.id}\r\n          onClose={() => onClose(c.id)}\r\n        /> )}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Cards;\r\n\r\n// ","import React, { useState } from 'react'\r\n\r\n\r\nconst Searchbar = ({onSearch}) => {\r\n    const [city, setCity] = useState(\"\");\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSearch(city);\r\n    }\r\n    return (\r\n        <form class=\"d-flex\" onSubmit={(e) => onSubmit(e)} >\r\n          <input\r\n            class=\"form-control me-2\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            value = {city}\r\n            onChange={e => setCity(e.target.value)}\r\n          />\r\n          <button type=\"submit\" class=\"btn btn-warning\">\r\n            Search\r\n          </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport './Nav.css'\r\n\r\nconst Nav = ({onSearch}) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\" id=\"colorNav\">\r\n      <div class=\"container-fluid\">\r\n        <Link to='/'><a class=\"navbar-brand\">Weather App</a></Link>\r\n        <Link to='/About'> About </Link>\r\n        <Searchbar onSearch={onSearch}/>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport \"./App.css\";\r\nimport About from \"./Componentes/About/About\";\r\nimport Cards from \"./Componentes/Cards/Cards\";\r\nimport Nav from \"./Componentes/Nav/Nav\";\r\n\r\nconst apiKey = \"74e10aab71c1eb7d76331db9a40509cf\";\r\n\r\n//http://api.openweathermap.org/data/2.5/weather?q=Santiago&appid=74e10aab71c1eb7d76331db9a40509cf\r\n\r\nconst App = () => {\r\n  const [cities, setCities] = useState([]);\r\n  function onClose(id) {\r\n    setCities((oldCities) => oldCities.filter((c) => c.id != id));\r\n  }\r\n  function onSearch(ciudad) {\r\n    fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\r\n    )\r\n      .then((r) => r.json())\r\n      .then((info) => {\r\n        if (info.main !== undefined) {\r\n          const ciudad = {\r\n            min: Math.round(info.main.temp_min),\r\n            max: Math.round(info.main.temp_max),\r\n            img: info.weather[0].icon,\r\n            id: info.id,\r\n            wind: info.wind.speed,\r\n            temp: info.main.temp,\r\n            name: info.name,\r\n            weather: info.weather[0].main,\r\n            clouds: info.clouds.all,\r\n            latitud: info.coord.lat,\r\n            longitud: info.coord.lon,\r\n          };\r\n          setCities((oldCities) => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter((c) => c.id == parseInt(ciudadId));\r\n    if (ciudad.length > 0) {\r\n      return ciudad[0];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Route path=\"/\" render={() => <Nav onSearch={onSearch}/>} />\r\n      <Route path=\"/About\" component={ About } />\r\n      <div>\r\n        <Route exact path='/' render = {() => <Cards cities={cities} onClose={onClose}/>}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}